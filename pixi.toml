"$schema" = "https://pixi.sh/latest/schema/manifest/schema.json"

[workspace]
name = "meso-forge-tools"
version = "0.1.1"
description = "Multi-package build suite"
authors = ["Fred Eisele <fred.eisele@vanderbilt.edu>"]
channels = [
    "conda-forge",
    "https://prefix.dev/meso-forge",
]
platforms = [
    "linux-64",
    "linux-aarch64",
]
preview = ["pixi-build"]

[dependencies]
rattler-build = ">=0.44.0,<0.50"
rattler-index = ">=0.22.4,<0.23"
git = ">=2.49.0,<3.0"
nushell = ">=0.105.1,<0.106"
typer = ">=0.16.0,<0.17"
pyyaml = ">=6.0.2,<7"
glib = ">=2.84.0,<3.0"
glib-tools = ">=2.84.0,<3.0"
libzlib = ">=1.3.0,<2.0"
requests = ">=2.32.4,<3"
semver = ">=3.0.4,<4"

[target.linux-64.dependencies]
gcc_linux-64 = "*"
gxx_linux-64 = "*"

[target.linux-aarch64.dependencies]
gcc_linux-aarch64 = "*"
gxx_linux-aarch64 = "*"

[tasks.build-all]
cmd = [
    "nu",
    "meso-forge/scripts/build_all.nu",
]
cwd = "."

[tasks.build-noarch]
cmd = [
    "nu",
    "meso-forge/scripts/build_noarch.nu",
]
cwd = "."

[tasks.build-platform]
cmd = [
    "nu",
    "meso-forge/scripts/build_platform.nu",
]
cwd = "."

[tasks.build-all-platforms]
cmd = [
    "nu",
    "meso-forge/scripts/build_platform.nu",
    "--all-platforms",
]
cwd = "."

[tasks.build-for-platform]
cmd = [
    "nu",
    "meso-forge/scripts/build_platform.nu",
    "--platform",
    "{{ platform }}",
]
cwd = "."

[[tasks.build-for-platform.args]]
arg = "platform"
default = "linux-64"



[tasks.build-pkg]
cmd = [
    "nu",
    "meso-forge/scripts/build_single.nu",
    "--recipe",
    "pkgs/{{ pkg }}/recipe.yaml",
]
cwd = "."

[[tasks.build-pkg.args]]
arg = "pkg"
default = "asciidoctor-revealjs"

[tasks.build-dry]
cmd = [
    "nu",
    "meso-forge/scripts/build_single.nu",
    "--recipe",
    "pkgs/{{ pkg }}/recipe.yaml",
    "--dry-run",
]
cwd = "."

[[tasks.build-dry.args]]
arg = "pkg"
default = "asciidoctor-revealjs"

[tasks.clean]
cmd = "rm -rf output/"
cwd = "."

[tasks.lint-recipes]
cmd = [
    "nu",
    "meso-forge/scripts/lint_recipes.nu",
]
cwd = "."

[tasks.lint-recipes-fix]
cmd = [
    "nu",
    "meso-forge/scripts/lint_recipes.nu",
    "--fix",
]
cwd = "."

[tasks.test-packages]
cmd = [
    "nu",
    "meso-forge/scripts/test_packages.nu",
]
cwd = "."

[tasks.test-platform]
cmd = [
    "nu",
    "meso-forge/scripts/test_packages.nu",
    "--platform",
]
cwd = "."

[tasks.test-package]
cmd = [
    "nu",
    "meso-forge/scripts/test_packages.nu",
    "--package",
]
cwd = "."

[tasks.publish-pd]
cwd = "."
cmd = [
    "nu",
    "meso-forge/scripts/package_publish.nu",
    "--mode",
    "pd",
    "--channel",
    "{{ channel }}",
    "{{ '--force' if force != '' else '' }}",
]

[[tasks.publish-pd.args]]
arg = "force"
default = ""

[[tasks.publish-pd.args]]
arg = "channel"
default = "meso-forge"

[tasks.publish-s3]
cwd = "."
cmd = [
    "nu",
    "meso-forge/scripts/package_publish.nu",
    "--mode",
    "s3",
    "--channel",
    "{{ channel }}",
    "--url",
    "{{ url }}",
    "{{ '--force' if force != '' else '' }}",
    "{{ '--dry-run' if dry_run != '' else '' }}",
]

[[tasks.publish-s3.args]]
arg = "force"
default = ""

[[tasks.publish-s3.args]]
arg = "dry_run"
default = ""

[[tasks.publish-s3.args]]
arg = "channel"
default = "s3://pixi/meso-forge"

[[tasks.publish-s3.args]]
arg = "url"
default = "https://minio.isis.vanderbilt.edu"

[tasks.publish-local]
cmd = [
    "nu",
    "meso-forge/scripts/package_publish.nu",
    "--mode",
    "s3",
    "--channel",
    "{{ channel }}",
    "--url",
    "{{ url }}",
    "{{ '--force' if force != '' else '' }}",
]

[[tasks.publish-local.args]]
arg = "force"
default = ""

[[tasks.publish-local.args]]
arg = "channel"
default = "s3://pixi-local/meso-forge"

[[tasks.publish-local.args]]
arg = "url"
default = "http://localhost:19000"

[tasks.retract-pd]
cmd = [
    "nu",
    "meso-forge/scripts/package_retract.nu",
    "{{ pkg }}",
    "--channel={{ channel }}",
    "--versions={{ versions }}",
    "--method=pd",
    "--target-platform={{ tgt_platform }}",
    "{{ '--force' if force != '' else '' }}",
]

[[tasks.retract-pd.args]]
arg = "pkg"
default = "_skeleton_python"

[[tasks.retract-pd.args]]
arg = "channel"
default = "meso-forge"

[[tasks.retract-pd.args]]
arg = "versions"
default = "1.0.0"

[[tasks.retract-pd.args]]
arg = "tgt_platform"
default = "linux-64"

[[tasks.retract-pd.args]]
arg = "force"
default = ""

[tasks.index-s3]
cmd = [
    "rattler-index",
    "s3",
    "{{ channel }}",
    "--region",
    "auto",
    "--endpoint-url",
    "{{ url }}",
    "--force-path-style",
    "||",
    "true",
]

[[tasks.index-s3.args]]
arg = "url"
default = "https://minio.isis.vanderbilt.edu"

[[tasks.index-s3.args]]
arg = "channel"
default = "s3://pixi/meso-forge"

[[tasks.index-local.depends-on]]
task = "index-s3"
args = [
    "http://localhost:19000",
    "s3://pixi-local/meso-forge",
]

[tasks.init-minio]
description = "Initialize local MinIO client for conda packages (secure - auto-detects credentials)"
cmd = [
    "nu",
    "minio-s3-tools/scripts/init_minio.nu",
]
cwd = "."

[tasks.init-minio-custom]
description = "Initialize MinIO with custom parameters (secure - no credential args)"
cmd = [
    "nu",
    "minio-s3-tools/scripts/init_minio.nu",
    "--url",
    "{{ url }}",
    "--bucket",
    "{{ bucket }}",
    "{{ '--interactive' if interactive == 'true' else '' }}",
]
cwd = "."

[[tasks.init-minio-custom.args]]
arg = "url"
default = "http://localhost:19000"

[[tasks.init-minio-custom.args]]
arg = "bucket"
default = "meso-forge"

[[tasks.init-minio-custom.args]]
arg = "interactive"
default = "false"

[tasks.init-minio-interactive]
description = "Initialize MinIO with interactive credential entry (secure)"
cmd = [
    "nu",
    "minio-s3-tools/scripts/init_minio.nu",
    "--interactive",
]
cwd = "."

[tasks.minio-list-credentials]
description = "List all stored MinIO credentials"
cmd = [
    "nu",
    "minio-s3-tools/scripts/manage_minio_credentials.nu",
    "--list",
]
cwd = "."

[tasks.minio-add-alias]
description = "Add new MinIO alias with secure credential handling"
cmd = [
    "nu",
    "minio-s3-tools/scripts/manage_minio_credentials.nu",
    "--add",
    "--alias",
    "{{ alias }}",
    "--url",
    "{{ url }}",
    "--interactive",
]
cwd = "."

[[tasks.minio-add-alias.args]]
arg = "alias"
default = "production"

[[tasks.minio-add-alias.args]]
arg = "url"
default = "https://minio.example.com"

[tasks.minio-test-alias]
description = "Test MinIO alias connection"
cmd = [
    "nu",
    "minio-s3-tools/scripts/manage_minio_credentials.nu",
    "--test",
    "--alias",
    "{{ alias }}",
]
cwd = "."

[[tasks.minio-test-alias.args]]
arg = "alias"
default = "local-minio"

[tasks.minio-remove-alias]
description = "Remove MinIO alias and all associated credentials"
cmd = [
    "nu",
    "minio-s3-tools/scripts/manage_minio_credentials.nu",
    "--remove",
    "--alias",
    "{{ alias }}",
]
cwd = "."

[[tasks.minio-remove-alias.args]]
arg = "alias"
default = "local-minio"

[tasks.remove-minio-bucket]
description = "Remove local MinIO bucket and clean up credentials"
cmd = [
    "nu",
    "minio-s3-tools/scripts/remove_minio_bucket.nu",
    "--server",
    "http://localhost:19000",
    "--bucket",
    "meso-forge",
    "--alias",
    "local-minio",
]
cwd = "."

[tasks.remove-minio-bucket-dry-run]
description = "Preview MinIO bucket removal (dry run)"
cmd = [
    "nu",
    "minio-s3-tools/scripts/remove_minio_bucket.nu",
    "--server",
    "http://localhost:19000",
    "--bucket",
    "meso-forge",
    "--alias",
    "local-minio",
    "--dry-run",
]
cwd = "."

[tasks.migrate-auth-to-keyring]
description = "Migrate RATTLER_AUTH_FILE credentials to platform keyring (dry run)"
cmd = [
    "nu",
    "minio-s3-tools/scripts/migrate_auth_to_keyring.nu",
    "--dry-run",
]
cwd = "."

[tasks.migrate-auth-to-keyring-execute]
description = "Migrate RATTLER_AUTH_FILE credentials to platform keyring"
cmd = [
    "nu",
    "minio-s3-tools/scripts/migrate_auth_to_keyring.nu",
]
cwd = "."

[environments.default]
solve-group = "default"

[environments.cross-build]
features = ["cross-compile"]
solve-group = "cross-build"

[environments.python-build]
features = ["python-packages"]
solve-group = "python-build"

[environments.cpp-build]
features = ["cpp-packages"]
solve-group = "cpp-build"

[environments.full-build]
features = [
    "python-packages",
    "cpp-packages",
    "cross-compile",
]
solve-group = "full-build"

[environments.dev]
features = ["dev-tools"]
solve-group = "dev"

[environments.update]
features = ["version-ctl"]

[feature.cross-compile.dependencies]

[feature.cpp-packages.dependencies]
cmake = "*"
ninja = "*"
pkg-config = "*"

[feature.python-packages.dependencies]
python = ">=3.12,<4.0"
setuptools = "*"
wheel = "*"
pip = "*"

[feature.dev-tools.dependencies]
minio = "*"

[feature.version-ctl.dependencies]
python = "3.12.*"
requests = ">=2.32.3,<3"
pyyaml = ">=6.0.2,<7"
"ruamel.yaml" = ">=0.17.0,<0.18"
semver = ">=3.0.2,<4"
py-rattler = ">=0.1.0"
aiohttp = ">=3.9.0,<4"
urllib3 = ">=2.5.0,<3.0"
pyright = ">=1.1.402,<1.2.0"
ruff = ">=0.12.0,<=0.13.0"

[feature.version-ctl.pypi-dependencies]
pluginlib = ">=0.10.0,<0.11"

[feature.version-ctl.tasks.update-version]
cmd = "{{ 'python scripts/version_ctl.py --update --package ' + package + (' --force' if force == 'true' else '') }}"

[[feature.version-ctl.tasks.update-version.args]]
arg = "package"

[[feature.version-ctl.tasks.update-version.args]]
arg = "force"
default = "false"

[feature.version-ctl.tasks.update-version-force]
cmd = "{{ 'python scripts/version_ctl.py --update --package ' + package + ' --force' }}"

[[feature.version-ctl.tasks.update-version-force.args]]
arg = "package"

[feature.version-ctl.tasks.update-version-each]
cmd = [
    "python",
    "scripts/version_ctl.py",
    "--update",
    "--each",
]

[tasks.update-versions]
description = "Update versions in all recipe.yaml files"
cmd = [
    "nu",
    "meso-forge/scripts/update_versions.nu",
    "--each",
]
cwd = "."

[tasks.update-versions-dry]
description = "Preview version updates without making changes"
cmd = [
    "nu",
    "meso-forge/scripts/update_versions.nu",
    "--each",
    "--dry-run",
]
cwd = "."

[tasks.update-version-meso-forge]
description = "Update version for meso-forge package"
cmd = [
    "nu",
    "meso-forge/scripts/update_versions.nu",
    "--package",
    "meso-forge",
]
cwd = "."

[tasks.update-version-minio-s3-tools]
description = "Update version for minio-s3-tools package"
cmd = [
    "nu",
    "meso-forge/scripts/update_versions.nu",
    "--package",
    "minio-s3-tools",
]
cwd = "."

[tasks.update-version-force]
description = "Update version for a package with force flag (edit task to specify package)"
cmd = [
    "nu",
    "meso-forge/scripts/update_versions.nu",
    "--package",
    "meso-forge",
    "--force",
]
cwd = "."

[tasks.update-version-manual]
description = "Manual update helper - edit this task to specify package and run"
cmd = [
    "nu",
    "-c",
    "print 'To update a specific package, run: nu meso-forge/scripts/update_versions.nu --package PACKAGE_NAME'; print 'Example: nu meso-forge/scripts/update_versions.nu --package minio-s3-tools --force'"
]
cwd = "."

[tasks.list-packages]
description = "List all packages that can have versions updated"
cmd = [
    "nu",
    "meso-forge/scripts/update_versions.nu",
    "--list",
]
cwd = "."
